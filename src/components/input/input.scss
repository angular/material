$input-container-padding-right: 16px !default;
$input-container-margin: 0 !default;
$input-container-min-height: 48px !default;


$default-padding-left: 1px !default;
$default-top-margin: 10px !default;

$input-label-font-size: 12px !default;
$input-label-min-height: 24px !default;
$input-label-margin-top: $default-top-margin !default;
$input-label-padding-left: $default-padding-left !default;
$input-label-default-offset: 24px !default;
$input-label-float-offset: 0 !default;
$input-label-float-width: 16px !default;
$input-label-float-scale: 1.0 !default;

$input-placeholder-offset: $input-label-default-offset !default;

$input-margin-top: $default-top-margin !default;
$input-margin-bottom: 11px !default;
$input-padding-top: 0px !default;
$input-padding-left: $default-padding-left !default;
$input-padding-bottom: 8px !default;
$input-border-width-default: 1px !default;
$input-border-width-focused: 2px !default;
$input-line-height: normal !default;
$input-box-sizing: content-box !default;

$textarea-padding-bottom: 4px;

$input-error-font-size: 12px !default;
$input-error-height: 24px !default;
$input-error-line-height: $input-error-font-size + 2px !default;
$error-padding-top: ($input-error-height - $input-error-line-height) / 2 !default;

$icon-offset: 56px !default;
$icon-height: 24px !default;

$icon-top-offset: ($icon-offset - $input-border-width-focused) / 4 !default;

$icon-float-focused-top: -8px !default;

md-input-container {
  @include pie-clearfix();
  display: inline-block;
  position: relative;
  padding-right: $input-container-padding-right;
  min-height: $input-container-min-height;
  margin: $input-container-margin;
  vertical-align: middle;

  &.md-block {
    display: block;
  }

  // Setup a spacer that is always there as a placeholder for any messages so we don't change
  // height with only 1 message
  .md-errors-spacer {
    @include rtl(float, right, left);
	margin-top: -3px;
	margin-bottom: 5px;
	
    &:empty {
    	display: none;
    }
  }
  
  &.md-input-has-messages .md-errors-spacer {
     display: block;
     min-height:8px;
     min-width: 1px;
     margin-top: 4px;

    &:empty {
      display: none;
    }
  }

  > md-icon {
    position: absolute;
    left: 0;
    top: 50%;
    margin-top: $icon-height / -2;
  }

  textarea,
  input[type="text"],
  input[type="password"],
  input[type="datetime"],
  input[type="datetime-local"],
  input[type="date"],
  input[type="month"],
  input[type="time"],
  input[type="week"],
  input[type="number"],
  input[type="email"],
  input[type="url"],
  input[type="search"],
  input[type="tel"],
  input[type="color"] {
    /* remove default appearance from all input/textarea */
    -moz-appearance: none;
    -webkit-appearance: none;
  }
  
  input[type="password"] {
    letter-spacing: 2px;
  }
  
  textarea {
    resize: none;
    overflow: hidden;
	padding-left: 0;
	padding-right: 0;
	
    &.md-input {
      //min-height: $input-line-height;
      padding-bottom: 2px;
      margin-bottom: 9px;
      box-sizing: content-box;
      -ms-flex-preferred-size: auto; //IE fix
    }

    &._md-textarea-scrollable,
    &[md-no-autogrow] {
      overflow: auto;
    }

    // The height usually gets set to 1 line by `.md-input`.
    &[md-no-autogrow] {
      height: auto;
    }
  }

  label:not(._md-container-ignore) {
    position: absolute;
    font-size: 12px;
    @include rtl(left, 0, auto);
    @include rtl(right, auto, 0);

    &.md-required:after {
      content: ' *';
      font-size: 13px;
      vertical-align: top;
    }
  }

  label:not(.md-no-float):not(._md-container-ignore),
  ._md-placeholder {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    width: 100%;
    order: 1;
    pointer-events: none;
    -webkit-font-smoothing: antialiased;
    margin-top: $input-label-margin-top;
    @include rtl(padding-left, $input-label-padding-left, 0);
    @include rtl(padding-right, 0, $input-label-padding-left);
    line-height: normal;
    font-size: inherit;
    z-index: 1;
    transform: translate3d(0, 21px, 0);
    transition: transform $swift-ease-out-duration $swift-ease-out-timing-function,
	            font-size $swift-ease-out-duration $swift-ease-out-timing-function	;

    // The max-width is necessary, because in some browsers, using this together with
    // a calc might cause it to overflow the parent. See #7403
    max-width: 100%;

    @include rtl(transform-origin, left top, right top);
  }
  ._md-placeholder {
    position: absolute;
    top: 0;
    opacity: 0;
    transition-property: opacity, transform, font-size;
    transform: translate3d(0, 21px, 0);
  }
  &.md-input-focused ._md-placeholder {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
  // Placeholder should immediately disappear when the user starts typing
  &.md-input-has-value ._md-placeholder {
    transition: none;
    opacity: 0;
  }

  &:not( .md-input-has-value ) input:not( :focus ),
  &:not( .md-input-has-value ) input:not( :focus )::-webkit-datetime-edit-ampm-field,
  &:not( .md-input-has-value ) input:not( :focus )::-webkit-datetime-edit-day-field,
  &:not( .md-input-has-value ) input:not( :focus )::-webkit-datetime-edit-hour-field,
  &:not( .md-input-has-value ) input:not( :focus )::-webkit-datetime-edit-millisecond-field,
  &:not( .md-input-has-value ) input:not( :focus )::-webkit-datetime-edit-minute-field,
  &:not( .md-input-has-value ) input:not( :focus )::-webkit-datetime-edit-month-field,
  &:not( .md-input-has-value ) input:not( :focus )::-webkit-datetime-edit-second-field,
  &:not( .md-input-has-value ) input:not( :focus )::-webkit-datetime-edit-week-field,
  &:not( .md-input-has-value ) input:not( :focus )::-webkit-datetime-edit-year-field,
  &:not( .md-input-has-value ) input:not( :focus )::-webkit-datetime-edit-text {
    color: transparent;
  }

  /*
   * The .md-input class is added to the input/textarea
   */
  .md-input {
    order: 2;
    display: block;
    margin-top: $input-margin-top;
    margin-bottom: $input-margin-bottom;
    background: none;
    padding-top: $input-padding-top;
    padding-bottom: $input-padding-bottom - $input-border-width-default;
    border-width: 0 0 $input-border-width-default 0;
    line-height: normal;
    height: auto;
    -ms-flex-preferred-size: auto; //IE fix
    border-radius: 0;
    border-style: solid; // Firefox fix

    // Fix number inputs in Firefox to be full-width
    width: 100%;
    box-sizing: border-box;

    // Hacky fix to force vertical alignment between `input` and `textarea`
    // Input and textarea do not align by default:
    // http://jsbin.com/buqomevage/1/edit?html,css,js,output
    @include rtl(float, left, right);

    &:focus {
      outline: none;
    }
    &:invalid {
      outline: none;
      box-shadow: none;
    }

    &.md-no-flex {
      flex: none !important;
    }
  }

  .md-char-counter {
  	
    //@include rtl(text-align, right, left);
    //@include rtl(padding-right, $input-container-padding, 0);
    //@include rtl(padding-left, 0, $input-container-padding);
  }

  //
  // ngMessage base styles - animations moved to input.js
  //
  [ng-messages],
  .md-input-messages-animation {
    position: relative;
    min-height: 14px;
    padding-top: 2px;
    margin-bottom: -1px;
    order: 4;
    overflow: hidden;
    @include rtl(clear, left, right);

    &.ng-enter {
      // Upon entering the DOM, messages should be hidden
      [ng-message],
      .md-input-message-animation {
        opacity: 0;
        margin-top: -100px;
      }
    }
  }

  [ng-message],
  .md-char-counter {
    font-size: $input-error-font-size;
    line-height: $input-error-line-height;
    overflow: hidden;

    

    // Default state for messages is to be visible
    opacity: 1;
    margin-top: 0;

    // Add some top padding which is equal to half the difference between the expected height
    // and the actual height
    //padding-top: $error-padding-top;

    &:not(.md-char-counter) {
      // Add some padding so that the messages don't touch the character counter
      @include rtl(padding-right, rem(0.5), 0);
      @include rtl(padding-left, 0, rem(0.5));
    }
  }
  
  .md-input-message-animation,
  .md-char-counter {
  	transition: $swift-ease-in;
  }

  &:not(.md-input-invalid) {
    .md-auto-hide {
      [ng-message],
      .md-input-message-animation {
        opacity: 0;
        margin-top: -100px;
      }
    }
  }

  // Note: This is a workaround to fix an ng-enter flicker bug
  .md-auto-hide {
    [ng-message],
    .md-input-message-animation {
      &:not(.ng-animate) {
        opacity: 0;
        margin-top: -100px;
      }
    }
  }

  [ng-message],
  .md-input-message-animation {
    &.ng-enter {
      opacity: 0;
      margin-top: -100px;
    }
  }

  &.md-input-focused,
  &.md-input-has-placeholder,
  &.md-input-has-value {
    label:not(.md-no-float) {
      transform: translate3d(0, $input-label-float-offset, 0);
      transition: transform $swift-ease-out-timing-function $swift-ease-out-duration,
                  width $swift-ease-out-timing-function $swift-ease-out-duration,
                  font-size $swift-ease-out-duration $swift-ease-out-timing-function;
      width: calc((100% - #{$input-label-float-width}) / #{$input-label-float-scale});
      font-size: 12px;
    }
  }

  // If we have an existing value; don't animate the transform as it happens on page load and
  // causes erratic/unnecessary animation
  &.md-input-has-value {
    label {
      transition: none;
    }
  }

  // Use wide border in error state or in focused state
  &.md-input-focused .md-input,
  .md-input.ng-invalid.ng-dirty {
    padding-bottom: $input-padding-bottom - $input-border-width-focused;
    border-width: 0 0 $input-border-width-focused 0;
  }
  
  &.md-input-focused textarea.md-input,
  textarea.md-input.ng-invalid.ng-dirty {
    padding-bottom: 2px;
  }

  .md-input {
    &[disabled],
    [disabled] & {
      // The negative border width offsets the dotted "border" so
      // it's placed in the same place as the solid one before it.
      background-position: bottom $input-border-width-default * -1 left 0;
      // This background-size is coordinated with a linear-gradient set in input-theme.scss
      // to create a dotted line under the input.
      background-size: 4px 1px;
      background-repeat: repeat-x;
    }
  }

  &.md-icon-float {

    transition: margin-top $swift-ease-out-duration $swift-ease-out-timing-function;

    > label {
      pointer-events: none;
      position: absolute;
    }

    > md-icon {
      //top: $icon-top-offset;
      //@include rtl(left, 2px, auto);
      //@include rtl(right, auto, 2px);
    }

  }

  &.md-icon-left,
  &.md-icon-right {
    > label {
      &:not(.md-no-float):not(._md-container-ignore),
      .md-placeholder {
        width: calc(100% - #{$icon-offset} - #{$input-label-float-width});
      }
    }

    &.md-input-focused,
    &.md-input-has-placeholder,
    &.md-input-has-value {
      > label {
        &:not(.md-no-float):not(._md-container-ignore),
        .md-placeholder {
          width: calc((100% - #{$icon-offset} - #{$input-label-float-width}) / #{$input-label-float-scale});
        }
      }
    }
  }
  
  &:last-of-type {
    @include rtl(padding-left, 0, 0);
    @include rtl(padding-right, 0, 0);
  }

  // icon offset should have higher priority as normal label
  &.md-icon-left {
    @include rtl(padding-left, $icon-offset, $input-container-padding-right);
    @include rtl(padding-right, $input-container-padding-right, $icon-offset);
    > label {
      @include rtl(left, $icon-offset, auto);
      @include rtl(right, auto, $icon-offset);
    }

    &:last-of-type {
      @include rtl(padding-left, $icon-offset, 0);
      @include rtl(padding-right, 0, $icon-offset);
    }
  }

  &.md-icon-right {
    @include rtl(padding-left, $input-container-padding-right, $icon-offset);
    @include rtl(padding-right, $icon-offset, $input-container-padding-right);

    > md-icon:last-of-type {
      margin: 0;

      @include rtl(right, 2px, auto);
      @include rtl(left, auto, 2px);
    }
    
    &:last-child {
      @include rtl(padding-left, 0, $icon-offset);
      @include rtl(padding-right, $icon-offset, 0);
    }
  }

  &.md-icon-left.md-icon-right {
    padding-left: $icon-offset;
    padding-right: $icon-offset;

    > label {
      &:not(.md-no-float):not(._md-container-ignore),
      .md-placeholder {
        width: calc(100% - (#{$icon-offset} * 2));
      }
    }

    &.md-input-focused,
    &.md-input-has-placeholder,
    &.md-input-has-value {
      > label {
        &:not(.md-no-float):not(._md-container-ignore),
        .md-placeholder {
          width: calc((100% - (#{$icon-offset} * 2)) / #{$input-label-float-scale});
        }
      }
    }
  }
  
  &.md-input-has-messages {
    label:not(.md-no-float):not(._md-container-ignore),
    ._md-placeholder {
      margin-top: 14px;
    }

    .md-input{
      margin-bottom: 4px;
    }
    

  }

  &.md-input-has-label {
    .md-input{
      margin-top: 34px;
    }

    &.md-input-focused,
    .md-input.ng-invalid.ng-dirty {
      input[type="date"].md-input,
      input[type="datetime-local"].md-input,
      input[type="month"].md-input,
      input[type="time"].md-input,
      input[type="week"].md-input {
        padding-bottom: 4px;
      }

      textarea.md-input {
        padding-bottom: 9px;
      }
    }

    input[type="date"].md-input,
    input[type="datetime-local"].md-input,
    input[type="month"].md-input,
    input[type="time"].md-input,
    input[type="week"].md-input {
      margin-top: 31px;
      padding-bottom: 5px;
    }

    textarea.md-input {
      //has label preceding md-input
      margin-top: 32px;
      padding-bottom: 9px;
      box-sizing: border-box;
      @include rtl(padding-right, 8px, 0);
      @include rtl(padding-left, 0, 8px);
    }
  }

}

@media screen and (-ms-high-contrast: active) {
  md-input-container.md-default-theme > md-icon {
    fill: #fff;
  }
}
