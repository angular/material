/**
 * Position a FAB button.
 */
@mixin fab-position($spot, $top: auto, $right: auto, $bottom: auto, $left: auto) {
  &.material-button-fab-#{$spot} {
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
    position: absolute;
  }
}

material-button {

  @include user-select(none);
  position: relative; //for child absolute-positioned <canvas>
  display: inline-block;

  outline: none;
  border: 0;
  padding: 0;
  margin: 0;

  border-radius: $button-border-radius;
  text-align: center;

  // Always uppercase buttons
  text-transform: uppercase;
  font-weight: inherit;
  font-style: inherit;
  font-variant: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;

  cursor: pointer;
  overflow: hidden;   // for ink containment

  // reserved for inner buttons and inner hrefs
  .material-button-inner {
    display: block;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: transparent;
    border: none;
    color: inherit;
    outline: none;
    text-transform: inherit;
    font-weight: inherit;
    font-style: inherit;
    font-variant: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
    white-space: nowrap;
    padding: 4px;
  }

  // If we have a href and an inner anchor, let the clicks pass through to the anchor
  &[href] {
    pointer-events: none;
    .material-button-inner {
      pointer-events: auto;
    }
  }


  &.material-button-colored {
    color: $button-colored-color;
    fill: $button-colored-color;
  }

  &.material-button-cornered {
    border-radius: 0;
  }

  &:hover:not([disabled]),
  // Uses a .focus class because the child button/a is getting the actual focus
  &.focus {
    background-color: $button-hover-background;
  }

  &[disabled] {
    background-color: $button-disabled-background !important;
    color: $button-disabled-color !important;
    cursor: auto;
  }

  &.material-button-icon {
    padding: 0;
    background: none;
  }

  &.material-button-raised {
    background-color: $button-raised-background;

    -webkit-transition: 0.2s linear;
    -webkit-transition-property: box-shadow, -webkit-transform, background-color;
    transition: 0.2s linear transform;
    transition-property: box-shadow, transform, background-color;
    @include transform-translate3d(0, 0, 0);

    @extend .material-shadow-bottom-z-1;

    &:hover:not([disabled]),
    &.focus {
      background-color: $button-raised-hover-background;
    }

    &.material-button-colored {
      background-color: $button-raised-colored-background;
      color: $button-raised-colored-color;

      &:hover:not([disabled]),
      &.focus {
        background-color: $button-raised-colored-hover-background;
      }
    }
  }

  &.material-button-fab {

    @include fab-position(bottom-right, auto, $button-fab-width/2, $button-fab-height/2, auto);
    @include fab-position(bottom-left, auto, auto, $button-fab-height/2, $button-fab-width/2);
    @include fab-position(top-right, $button-fab-height/2, $button-fab-width/2, auto, auto);
    @include fab-position(top-left, $button-fab-height/2, auto, auto, $button-fab-width/2);

    z-index: $z-index-fab;

    width: $button-fab-width;
    height: $button-fab-height;

    border-radius: $button-fab-border-radius;

    @extend .material-shadow-bottom-z-1;
    border-radius: 50%;
    overflow: hidden;

    @include transform-translate3d(0,0,0);
    -webkit-transition: 0.2s linear;
    -webkit-transition-property: -webkit-transform, box-shadow;
    transition: transform 0.2s linear;
    transition-property: transform, box-shadow;
  }

  &.material-button-raised,
  &.material-button-fab {
    &.focus,
    &:hover:not([disabled]) {
      @include transform-translate3d(0, -1px, 0);
      @extend .material-shadow-bottom-z-2;
    }
  }
}

.material-toast-open-top {
  material-button.material-button-fab-top-left,
  material-button.material-button-fab-top-right {
    @include transform-translate3d(0, $button-fab-toast-offset, 0);
    &.focus,
    &:hover:not([disabled]) {
      @include transform-translate3d(0, $button-fab-toast-offset - 1, 0);
    }
  }
}
.material-toast-open-bottom {
  material-button.material-button-fab-bottom-left,
  material-button.material-button-fab-bottom-right {
    @include transform-translate3d(0, -$button-fab-toast-offset, 0);
    &.focus,
    &:hover {
      @include transform-translate3d(0, -$button-fab-toast-offset - 1, 0);
    }
  }
}


.material-button-group {
  @include flex-display();
  @include flex(1);
  width: 100%;
}
.material-button-group > .material-button {
  @include flex(1);

  display: block;

  overflow: hidden;

  width: 0;

  border-width: 1px 0px 1px 1px;
  border-radius: 0;

  text-align: center;
  text-overflow: ellipsis;
  white-space: nowrap;

  &:first-child {
    border-radius: 2px 0px 0px 2px;
  }
  &:last-child {
    border-right-width: 1px;
    border-radius: 0px 2px 2px 0px;
  }
}
